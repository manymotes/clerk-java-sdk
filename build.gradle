/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
//    id "org.openapi.generator" version "7.5.0"
}


repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }

    maven {
        url = uri('https://maven.pkg.github.com/zonos/zonos-queue')
    }
}

dependencies {

//    implementation 'com.squareup.okhttp3:okhttp:4.9.3'

//    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'io.springfox:springfox-swagger2:2.9.2'
//    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    api libs.com.microsoft.kiota.microsoft.kiota.abstractions
    api libs.com.microsoft.kiota.microsoft.kiota.serialization.json
    api libs.com.microsoft.kiota.microsoft.kiota.serialization.text
    api libs.com.microsoft.kiota.microsoft.kiota.serialization.form
    api libs.com.microsoft.kiota.microsoft.kiota.serialization.multipart
    api libs.org.bitbucket.b.c.jose4j
    api libs.org.eclipse.microprofile.jwt.microprofile.jwt.auth.api
    api libs.jakarta.annotation.jakarta.annotation.api
    api libs.jakarta.enterprise.jakarta.enterprise.cdi.api
    api libs.org.jetbrains.annotations
    api libs.org.projectlombok.lombok.mapstruct.binding
    api libs.org.mapstruct.mapstruct
//    compileOnly libs.org.projectlombok.lombok
//    compileOnly libs.org.mapstruct.mapstruct.processor

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

}

group = 'io.github.zzhorizonzz'
version = '0.1.19'
description = 'Clerk - Java - SDK'
java.sourceCompatibility = JavaVersion.VERSION_1_8

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    enabled = false
}

//openApiGenerate {
//    generatorName = 'java' // Set the client generator you need, e.g., 'java', 'python', etc.
//    inputSpec = "openapi.json"
//    outputDir = "${project.buildDir}/generated-sources/openapi".toString()
//    apiPackage = 'io.github.zzhorizonzz.sdk.client'
//    modelPackage = 'io.github.zzhorizonzz.sdk.client'
//    invokerPackage = 'io.github.zzhorizonzz.sdk.client'
//    configOptions = [
//            dateLibrary: "java8" // Use Java 8 date types
//    ]
//}

//sourceSets {
//    main {
//        java {
//            srcDir "${project.buildDir}/src/main/java/io/github/zzhorizonzz/sdk/client"
//        }
//    }
//}
